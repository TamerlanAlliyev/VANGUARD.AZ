@using Vanguard.Areas.Admin.ViewModels.Admin
@model ProductCreateVM





<style>
    .ca-title {
        width: 30%;
    }

    .ca-container {
        width: 70%;
    }

    input[type="color"] {
        -webkit-appearance: none;
        appearance: none;
        width: 100px;
    }

        input[type="color"]::-webkit-color-swatch-wrapper {
            padding: 0;
        }

        input[type="color"]::-webkit-color-swatch {
            border: none;
        }

    .select2-selection__choice {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 30px !important;
        margin-top: 5px !important;
    }


    .new-color {
        display: none;
    }

        .new-color.active {
            display: flex;
        }

    .prod-size input,
    .prod-count input {
        width: 90%;
        height: 45px !important;
        padding: 8px;
    }

    .del-btn {
        background-color: transparent;
        border: none;
        position: relative;
        color: #ffff;
        height: 45px;
        width: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none !important;
    }

        .del-btn:hover {
            background-color: #dc3545;
            color: #ffff;
        }

    .select-col {
        display: flex;
        flex-direction: column;
        width: 45%;
        margin: 0 !important;
    }

    .select-butn {
        padding: 0.75rem 1rem;
        background: #161717;
        border-color: #2B2B2B;
        border-radius: 1rem;
        cursor: pointer;
        animation: bounce 0.3s ease-in-out;
    }

        .select-butn.active {
            border-radius: 1rem 1rem 0 0;
        }

    .color-search {
        background: #c8c8c8;
        border: none;
        width: 100%;
        padding: 6px 12px;
    }

    .col-list {
        width: 100%;
        display: flex;
        flex-direction: column;
        background: #161717;
        max-height: 200px;
        border-radius: 0 0 1rem 1rem;
        overflow-y: auto;
        transition: all 0.5s ease-in-out;
    }


        .col-list label {
            margin: 0 !important;
            padding: 10px 20px;
            cursor: pointer;
        }

            .col-list label:hover {
                background: #373939;
            }

        .col-list::-webkit-scrollbar {
            width: 8px;
            border-radius: 8px;
        }

        .col-list::-webkit-scrollbar-thumb {
            background: #373939c3;
            border-radius: 8px;
        }

    .col-container {
        display: none;
        flex-direction: column;
        transition: all 0.5s ease-in-out;
        transform: translateY(-10px);
        opacity: 0;
    }

        .col-container.active {
            display: flex;
            transform: translateY(0);
            opacity: 1;
            animation: slideIn 0.5s ease-in-out;
        }

    @@keyframes bounce {

        0%,
        20%,
        50%,
        80%,
        100% {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-5px);
        }

        60% {
            transform: translateY(-3px);
        }
    }

    @@keyframes slideIn {
        from {
            transform: translateY(-10px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @@keyframes slideIn {
        from {
            transform: translateY(10px);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @@keyframes slideOut {

        from {
            transform: translateY(0);
            opacity: 1;
        }

        to {
            transform: translateY(10px);
            opacity: 0;
        }
    }

    .color-new-btn {
        border-radius: 10px;
        height: 40px;
        justify-content: center;
        align-items: center;
        display: flex;
        font-size: 14px;
        width: 28% !important;
        padding: 5px;
    }

    thead tr th:first-child,
    .color-list-table thead tr th:last-child {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .color-list-cricle {
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #000;
    }

        .color-list-cricle:hover {
            background: #545454 !important;
            cursor: pointer;
        }

    .color-list-cricle {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 0.3s ease;
    }

        .color-list-cricle:active {
            transform: scale(0.85);
        }

    .close-b {
        display: none;
    }

    .color-list-cricle:hover .close-b {
        display: flex;
    }

    .add-size-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        font-size: 24px;
        cursor: pointer;
    }

        .add-size-btn i {
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

            .add-size-btn i:active {
                transform: scale(0.95);
                background: #ffffff;
                color: #000;
            }




    .add-upload-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        font-size: 24px;
        cursor: pointer;
        color: red;
    }

        .add-upload-btn i {
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

            .add-upload-btn i:active {
                transform: scale(0.95);
            }



    .sec-img {
        display: none;
    }


        .sec-img.active {
            display: inherit;
        }

    /* ========== Image ========= */
    .color-img-body {
        display: flex;
        justify-content: space-between;
        flex-direction: column;
    }

    .sec-img {
        width: 100%;
        padding: 0rem 1rem 1rem 1rem;
    }

    .select-color {
        padding: 1rem;
    }

    .select-color-head {
        width: 100%;
        display: flex;
        padding: 0 1rem 1rem 1rem;
    }

    .sec-hed {
        color: #fff;
        /* text-align: center; */
    }

        .sec-hed:nth-child(1) {
            width: 15%;
        }

        .sec-hed:nth-child(2) {
            width: 30%;
        }

        .sec-hed:nth-child(3) {
            width: 25%;
        }


        .sec-hed:nth-child(4) {
            width: 15%;
            text-align: center;
        }

        .sec-hed:nth-child(5) {
            width: 15%;
            text-align: center;
        }



    .sec-body {
        color: #fff;
        width: 20%;
    }


    .color-box {
        width: 100%;
        padding: 1.5rem 1rem 1rem 1rem;
        height: 80px;
        display: flex;
        align-items: center;
    }

    .image-box {
        width: 100%;
    }

    .col-body {
        display: flex;
    }


        .col-body:nth-child(1) {
            width: 15%;
        }

        .col-body:nth-child(2) {
            width: 30%;
        }

        .col-body:nth-child(3) {
            width: 25%;
        }

        .col-body:nth-child(4) {
            width: 15%;
        }

        .col-body:nth-child(5) {
            justify-content: center;
            width: 15%;
        }

    .img-container {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 600px;
        flex-direction: column;
        gap: 10px;
    }

    .label-image img {
        width: 35%;
        height: 35%;
        object-fit: contain;
        object-position: center;
    }

    .label-image.active img {
        width: 35%;
        height: 35%;
        object-fit: cover;
        object-position: top center;
    }

    .label-image {
        width: 100%;
        height: 100%;
        transition: all 0.3s ease-out;
        cursor: pointer;
        border: 3px solid #b4b4b4;
        border-radius: 1rem;
        transition: all 0.3s ease-out;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .label-image:active {
            transform: scale(0.9);
        }

    /* ========== Image ========= */


    /* ========== Image File ========= */

    .add-files {
        /* padding: 0 16px 0 90px; */
        display: flex;
        flex-direction: column;
        gap: 10px;
        height: auto !important;
        padding: 2rem 1rem 1rem 1rem;
    }

    .im-conta {
        padding: 0;
    }

    .additional-image {
        display: flex;
        flex-wrap: wrap;
        gap: 5%;
        row-gap: 5%;
        width: 100%;
        row-gap: 30px;
        max-height: auto !important;
    }

    .add-container {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 316px;
        flex-direction: column;
        gap: 10px;
        width: 30%;
    }

    .hover-img-selected {
        width: 50%;
        height: 50%;
        object-fit: contain;
        object-position: center;
    }


    .add-label-image {
        width: 100%;
        height: 100%;
        transition: all 0.3s ease-out;
        cursor: pointer;
        border: 3px solid #b4b4b4;
        border-radius: 1rem;
        transition: all 0.3s ease-out;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
    }

        .add-label-image:active {
            transform: scale(0.9);
        }

    .add-container.add-img-box {
        transition: all 0.5s ease;
    }

        .add-container.add-img-box .remove-img {
            position: absolute;
            width: 100%;
            height: 100%;
            align-items: center;
            justify-content: center;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: #202020;
            background: #ffffff79;
            padding: 10px;
            font-size: 50px;
            display: none;
            transition: all 0.5s ease;
        }

    .add-img-box .add-label-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: top center;
    }

    .add-container.add-img-box:hover .remove-img {
        display: flex;
    }

    /* ========== Image File ========= */


    /* ========== Tags And Categories ========= */

    /* ========== Categories ========= */

    .select-col-category {
        display: flex;
        flex-direction: column;
        width: 70%;
        margin: 0 !important;
    }

    .select-btn-category {
        padding: 0.75rem 1rem;
        background: #161717;
        border-color: #2B2B2B;
        border-radius: 1rem;
        cursor: pointer;
        animation: bounce 0.3s ease-in-out;
    }

        .select-btn-category.active {
            border-radius: 1rem 1rem 0 0;
        }

    .category-search {
        background: #c8c8c8;
        border: none;
        width: 100%;
        padding: 6px 18px;
    }

    .category-list {
        width: 100%;
        display: flex;
        flex-direction: column;
        background: #161717;
        max-height: 200px;
        border-radius: 0 0 1rem 1rem;
        overflow-y: auto;
        transition: all 0.5s ease-in-out;
    }


        .category-list label {
            margin: 0 !important;
            padding: 10px 20px;
            cursor: pointer;
        }

            .category-list label:hover {
                background: #373939;
            }

            .category-list label.btn-primary span {
                color: #fff;
            }


        .category-list::-webkit-scrollbar {
            width: 8px;
            border-radius: 8px;
        }

        .category-list::-webkit-scrollbar-thumb {
            background: #373939c3;
            border-radius: 8px;
        }

    .col-container-category {
        display: none;
        flex-direction: column;
        transition: all 0.5s ease-in-out;
        transform: translateY(-10px);
        opacity: 0;
    }

        .col-container-category.active {
            display: flex;
            transform: translateY(0);
            opacity: 1;
            animation: slideIn 0.5s ease-in-out;
        }

    /* ========== Categories ========= */


    /* ========== Categories ========= */

    .select-col-tag {
        display: flex;
        flex-direction: column;
        width: 70%;
        margin: 0 !important;
    }

    .select-btn-tag {
        padding: 0.75rem 1rem;
        background: #161717;
        border-color: #2B2B2B;
        border-radius: 1rem;
        cursor: pointer;
        animation: bounce 0.3s ease-in-out;
    }

        .select-btn-tag.active {
            border-radius: 1rem 1rem 0 0;
        }

    .tag-search {
        background: #c8c8c8;
        border: none;
        width: 100%;
        padding: 6px 18px;
    }

    .tag-list {
        width: 100%;
        display: flex;
        flex-direction: column;
        background: #161717;
        max-height: 200px;
        border-radius: 0 0 1rem 1rem;
        overflow-y: auto;
        transition: all 0.5s ease-in-out;
    }


        .tag-list label {
            margin: 0 !important;
            padding: 10px 20px;
            cursor: pointer;
        }

            .tag-list label:hover {
                background: #373939;
            }

            .tag-list label.btn-primary span {
                color: #fff;
            }

        .tag-list::-webkit-scrollbar {
            width: 8px;
            border-radius: 8px;
        }

        .tag-list::-webkit-scrollbar-thumb {
            background: #373939c3;
            border-radius: 8px;
        }

    .col-container-tag {
        display: none;
        flex-direction: column;
        transition: all 0.5s ease-in-out;
        transform: translateY(-10px);
        opacity: 0;
    }

        .col-container-tag.active {
            display: flex;
            transform: translateY(0);
            opacity: 1;
            animation: slideIn 0.5s ease-in-out;
        }

    /* ========== Categories ========= */


    /* ========== Tags ========= */

    .selected-category-box {
        display: flex;
        min-height: 124px;
        gap: 1rem;
        flex-wrap: wrap;
        width: 73%;
        row-gap: 1rem;
        height: auto;
    }

        .selected-category-box .category-box {
            background: #202020;
            padding: 6px 12px;
            height: max-content;
            color: #f5f5f5;
            border-radius: 1rem;
            border: 0.5px solid #828690;
            transition: all 0.3s ease-out;
        }

        .selected-category-box .cat-name {
            padding-right: 6px;
        }

        .selected-category-box .cat-remove {
            padding-left: 6px;
            border-left: 1px solid #828690;
            cursor: pointer;
        }

        .selected-category-box .category-box:active {
            transform: scale(0.9);
        }




    .selected-tag-box {
        display: flex;
        min-height: 124px;
        gap: 1rem;
        flex-wrap: wrap;
        width: 73%;
        row-gap: 1rem;
        height: auto;
    }

        .selected-tag-box .tag-box {
            background: #202020;
            padding: 6px 12px;
            height: max-content;
            color: #f5f5f5;
            border-radius: 1rem;
            border: 0.5px solid #828690;
            transition: all 0.3s ease-out;
        }

        .selected-tag-box .tag-name {
            padding-right: 6px;
        }

        .selected-tag-box .tag-remove {
            padding-left: 6px;
            border-left: 1px solid #828690;
            cursor: pointer;
        }

        .selected-tag-box .tag-box:active {
            transform: scale(0.9);
        }

    /* ========== Tags ========= */

    .color-img-body {
        display: flex;
        justify-content: space-between;
        flex-direction: column;
    }

    .sec-img {
        width: 100%;
        padding: 0rem 1rem 1rem 1rem;
    }

    .select-color {
        padding: 1rem;
    }

    .select-color-head {
        width: 100%;
        display: flex;
        padding: 0 1rem 1rem 1rem;
    }

    .sec-hed {
        color: #fff;
        /* text-align: center; */
    }

        .sec-hed:nth-child(1) {
            width: 15%;
        }

        .sec-hed:nth-child(2) {
            width: 30%;
        }

        .sec-hed:nth-child(3) {
            width: 25%;
        }


        .sec-hed:nth-child(4) {
            width: 15%;
            text-align: center;
        }

        .sec-hed:nth-child(5) {
            width: 15%;
            text-align: center;
        }



    .sec-body {
        color: #fff;
        width: 20%;
    }


    .color-box {
        width: 100%;
        padding: 1.5rem 1rem 1rem 1rem;
        height: 80px;
        display: flex;
        align-items: center;
    }

    .image-box {
        width: 100%;
    }

    .col-body {
        display: flex;
    }


        .col-body:nth-child(1) {
            width: 15%;
        }

        .col-body:nth-child(2) {
            width: 30%;
        }

        .col-body:nth-child(3) {
            width: 25%;
        }

        .col-body:nth-child(4) {
            width: 15%;
        }

        .col-body:nth-child(5) {
            justify-content: center;
            width: 15%;
        }
</style>










<div class="content-body">
    <div class="container-fluid">
        <div class="row page-titles">
            <ol class="breadcrumb">
                <li class="breadcrumb-item active"><a href="javascript:void(0)">Product</a></li>
                <li class="breadcrumb-item"><a sty href="javascript:void(0)">Create</a></li>
            </ol>
        </div>
        <!-- row -->
        <div class="row">
            <form id="Form" method="post" enctype="multipart/form-data">

                <!-- ==========================================
                               Product Informations
                ===============================================-->
                <div class="col-lg-12">


                    <div class="card">

                        <div class="card-header card">
                            <h4 class="card-title">Product Informations</h4>
                        </div>

                        <div class="card-body">
                            <div class="form-validation">
                                <div class="row">


                                    <div class="col-xl-7 ">

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label ca-title"
                                                   for="validationCustom01">
                                                Product Name
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-8 ca-container" style="padding-right: 10%;">
                                                <input asp-for="Name" type="text" class="form-control"
                                                       id="validationCustom01"
                                                       placeholder="Enter a Product Name..">
                                                <span asp-validation-for="Name" class="text-danger"></span>
                                            </div>
                                        </div>

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label ca-title"
                                                   for="validationCustom02">
                                                Short Description <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-8 ca-container" style="padding-right: 10%; ">

                                                <textarea asp-for="ShortDescription" style="min-height: 100px;"
                                                          class="form-control" id="validationCustom02" rows="5"
                                                          placeholder="Enter a Product Description..."></textarea>
                                                <span asp-validation-for="ShortDescription"
                                                      class="text-danger"></span>

                                            </div>
                                        </div>

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label ca-title"
                                                   for="validationCustom03">
                                                Detailed Description <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-8 ca-container" style="padding-right: 10%; ">

                                                <textarea asp-for="Description" style="min-height: 200px;"
                                                          class="form-control" id="validationCustom03" rows="5"
                                                          placeholder="Enter a Product Description..."></textarea>
                                                <span asp-validation-for="Description"
                                                      class="text-danger"></span>

                                            </div>
                                        </div>



                                    </div>


                                    <div class="col-xl-5">

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label " for="validationCustom03">
                                                Product Model
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-6 ">
                                                <input asp-for="Model" type="text" class="form-control"
                                                       id="validationCustom01"
                                                       placeholder="Product Model...">
                                                <span asp-validation-for="Model" class="text-danger"></span>
                                            </div>
                                        </div>


                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label " for="validationCustom03">
                                                Price
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-6 ">
                                                <input asp-for="SellPrice" type="number"
                                                       class="form-control price" id="validationCustom03"
                                                       placeholder="$00.0">

                                                <span asp-validation-for="SellPrice" class="text-danger"></span>

                                            </div>
                                        </div>

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label " for="validationCustom04">
                                                Discount Price
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-6 ">
                                                <input asp-for="DiscountPrice" type="number"
                                                       class="form-control discount" id="validationCustom04"
                                                       placeholder="$00.0">

                                            </div>
                                        </div>


                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label " for="validationCustom05">
                                                Offer
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-6 ">
                                                <input type="number" class="form-control offer"
                                                       id="validationCustom05" placeholder="%0">

                                            </div>
                                        </div>

                                        <div class="mb-3 row">
                                            <label class="col-lg-4 col-form-label" for="validationCustom05">
                                                Gender
                                                <span class="text-danger">*</span>
                                            </label>
                                            <div class="col-lg-6">
                                                <select class="default-select wide form-control select-gender" id="validationCustom05">
                                                    <option data-display="Select Gender">Select Gender</option>
                                                    @if (Model.Gender != null)
                                                    {
                                                        foreach (var gen in Model.Gender)
                                                        {
                                                            <option value="@gen.Id">@gen.Name</option>
                                                        }
                                                    }

                                                </select>
                                                <span class="text-danger" asp-validation-for="SelectedGender"></span>
                                            </div>
                                        </div>

                                    </div>



                                </div>

                            </div>
                        </div>

                    </div>
                </div>






                <!-- ==========================================
                              Tags and Categories
                ===============================================-->
                <div class="col-lg-12">


                    <div class="card">

                        <div class="card-header card">
                            <h4 class="card-title">Tags and Categories</h4>
                        </div>

                        <div class="card-body">
                            <div class="form-validation">
                                <div class="row">




                                    <div class="col-xl-5 ">

                                        <div class="mb-3 row">




                                            <label class="col-lg-4 col-form-label " style="width: 37%;"
                                                   for="validationCustom01">
                                                Selet Categories
                                                <span class="text-danger">*</span>
                                            </label>





                                            <div class="select-col-category " style="width: 63%;">

                                                <span class="select-btn-category">Select Categories</span>

                                                <div class="col-container-category">
                                                    <input class="category-search" type="text"
                                                           placeholder="Search Categories...">

                                                    <div class="category-list">
                                                        @if (Model.CategorySelection != null)
                                                        {

                                                            @foreach (var cat in Model.CategorySelection)
                                                            {

                                                                <label class="list-categ" data-id="@cat.Id"
                                                                       for="@cat.Id">
                                                                    <input type="checkbox" class="checkbox" id="@cat.Id"
                                                                           hidden />
                                                                    <span class="cat-name"> @cat.Name</span>
                                                                    <span class="par-name">
                                                                        @(cat.Parent != null ?
                                                                            $"({cat.Parent})" : "")
                                                                    </span>
                                                                </label>
                                                            }
                                                        }


                                                    </div>
                                                </div>
                                            </div>



                                        </div>




                                        <div class="mb-3 row">

                                            <label class="col-lg-4 col-form-label " style="width: 37%;"
                                                   for="validationCustom01">
                                                Selet Tags
                                                <span class="text-danger">*</span>
                                            </label>





                                            <div class="select-col-tag" style="width: 63%;">

                                                <span class="select-btn-tag">Select Tags</span>

                                                <div class="col-container-tag">
                                                    <input class="tag-search" type="text"
                                                           placeholder="Search Color...">

                                                    <div class="tag-list">

                                                        @if (Model.TagSelections != null)
                                                        {
                                                            @foreach (var tag in Model.TagSelections)
                                                            {
                                                                <label class="list-tag" data-id="@tag.Id" for="@tag.Id">
                                                                    <input type="checkbox" class="checkbox" id="@tag.Id"
                                                                           hidden />
                                                                    <span class="tag-name">@tag.Name</span>
                                                                </label>
                                                            }
                                                        }




                                                    </div>
                                                </div>
                                            </div>


                                        </div>

                                    </div>







                                    <div class="col-xl-7">



                                        <div class="mb-3 row">

                                            <label class="col-lg-3 col-form-label " style="width: 32%;"
                                                   for="validationCustom06">
                                                Selected Categories
                                                <span class="text-danger">*</span>
                                            </label>


                                            <ul class="col-lg-9 form-control p-3 selected-category-box"
                                                style="width: 66%;">

                                                @* <li class="category-box">
                                                <span class="cat-name-selected">Fashion</span>
                                                <a data-id="Fashion" class="cat-remove">
                                                <i class="fa-solid fa-xmark"></i>
                                                </a>
                                                <input value="Fashion" type="text" hidden>
                                                </li>
                                                *@

                                                <span asp-validation-for="SelectedCategoryIds" class="text-danger"></span>
                                            </ul>



                                        </div>



                                        <div class="mb-3 row">

                                            <label class="col-lg-3 col-form-label " style="width: 32%;"
                                                   for="validationCustom06">
                                                Selected Tags
                                                <span class="text-danger">*</span>
                                            </label>


                                            <ul class="col-lg-9 form-control p-3 selected-tag-box"
                                                style="width: 66%;">

                                                @* <li class="tag-box">
                                                <span data-id="5" class="tag-name">Fashion</span>
                                                <a class="tag-remove">
                                                <i class="fa-solid fa-xmark"></i>
                                                <input value="Fashion" type="text" hidden>
                                                </a>
                                                </li> *@

                                            </ul>


                                        </div>


                                    </div>








                                </div>

                            </div>
                        </div>

                    </div>


                </div>





                <div class="row">

                    <!-- ==========================================
                             Color Create && Selected Colors
                    ===============================================-->
                    <div class="col-lg-5">
                        <div class="row">


                            <div class="col-lg-12">
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title text-center d-flex justify-content-center w-100">
                                            Color Create & Select
                                        </h4>
                                    </div>

                                    <div class="card-body">
                                        <div class="form-validation">
                                            <div class="row">



                                                <div class="mb-3 row">
                                                    <label class="col-lg-4 col-form-label w-25"
                                                           for="validationCustom09">
                                                        Select Color
                                                        <span class="text-danger">*</span>
                                                    </label>



                                                    <div class="select-col">

                                                        <span class="select-butn">Select Colors</span>

                                                        <div class="col-container ">
                                                            <input class="color-search" type="text"
                                                                   placeholder="Search Color...">

                                                            <div class="col-list">

                                                                @if (Model.Colors != null)
                                                                {
                                                                    foreach (var color in Model.Colors)
                                                                    {
                                                                        <label class="list-c"
                                                                               data-hexcode="@color.HexCode"
                                                                               for="@color.HexCode">
                                                                            <input type="checkbox" class="checkbox"
                                                                                   id="@color.HexCode" hidden
                                                                                   name="@color.HexCode" />
                                                                            <span class="col-nam-c">@color.Name</span>
                                                                            <span> (@color.HexCode)</span>
                                                                        </label>
                                                                    }
                                                                }

                                                                @* <label class="list-c" data-hexcode="#00ff00"
                                                                for="#00ff00">
                                                                <input type="checkbox" class="checkbox"
                                                                id="#00ff00" hidden name="#00ff00" />
                                                                <span class="col-nam-c">Green</span> <span>
                                                                (#00ff00)</span>
                                                                </label> *@


                                                            </div>

                                                        </div>

                                                    </div>

                                                    <span class=" btn btn-primary color-new-btn "
                                                          style="width: 20%;">
                                                        Create New
                                                        Color
                                                    </span>



                                                </div>









                                                <div class="mb-3 row new-color mt-5 h-100">

                                                    <label style="padding: 0;"
                                                           class="col-lg-4 col-form-label w-25"
                                                           for="validationCustom09">
                                                        Create Color
                                                        <span class="text-danger">*</span>
                                                    </label>

                                                    <div class="col-lg-8   w-75">

                                                        <div class="bclr d-flex w-100"
                                                             style="justify-content: space-between !important;">

                                                            <div class="color-box-c "
                                                                 style="display: flex; flex-direction: column; width: 45%;  justify-content: start;">

                                                                <div style="width: 45%;"
                                                                     class="col-xl-4 example form-control p-0 d-flex w-100 justify-content-between align-items-center overflow-hidden">
                                                                    <input type="text" class="hexKod"
                                                                           value="#000000"
                                                                           style="width: 55%; height: 100%; padding: 10px; background: transparent; border: none; color: #ffff;">
                                                                    <input style="width: 45%;" id="color"
                                                                           value="#000000" type="color"
                                                                           class="w-50 h-100 c-inp">
                                                                </div>

                                                            </div>



                                                            <div class="color-box-c "
                                                                 style="display: flex; flex-direction: column; width: 50%; justify-content: end; ">

                                                                <div class="inp-box form-control d-flex align-items-center justify-content-between p-0 overflow-hidden">
                                                                    <input type="text"
                                                                           style="height: 100%; background: transparent; color:#ffff; width: 70%; padding-left: 10px; border: none;"
                                                                           class="col-xl-4 color-nam"
                                                                           id="validationCustom01"
                                                                           placeholder="Color Name..">
                                                                    <span class="btn btn-success color-crt-btn"
                                                                          style="height: 100%; border-radius: 0; width: 30%; padding: 0; display: flex; justify-content: center;align-items: center;font-size:10px; font-weight: 500;">Create</span>
                                                                </div>

                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <span class="text-info">Not!... Once all colors are selected you can upload images </span>


                                            </div>
















                                        </div>
                                    </div>

                                </div>
                            </div>


                            <!-- <div class="col-lg-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title text-center d-flex justify-content-center w-100">
                                            Selected Colors
                                        </h4>
                                    </div>

                                    <table class="table header-border table-hover verticle-middle color-list-table">
                                        <thead>
                                            <tr>
                                                <th scope="col"></th>
                                                <th scope="col">Color</th>
                                                <th scope="col">Name</th>
                                                <th scope="col">Hex Code</th>
                                                <th scope="col">Add Size</th>
                                            </tr>
                                        </thead>
                                        <tbody class="color-list-box">

                                            <tr data-id="#000000" class="color-box">
                                                <td></td>
                                                <td>
                                                    <div class="color-list-cricle" style="background: #000000;">
                                                        <i class="bi bi-x close-b" style="font-size: 25px;"></i>
                                                    </div>
                                                </td>
                                                <td class="color-list-name">White</td>
                                                <td>#ffffff</td>
                                                <td>
                                                    <div class="add-size-btn">
                                                        <i class="bi bi-plus-circle"></i>
                                                    </div>
                                                </td>
                                            </tr>

                                        </tbody>
                                    </table>
                                </div>
                            </div> -->

                        </div>



                    </div>



                    <!-- ==========================================
                             Select Color List
                    ===============================================-->
                    <!-- ==========================================
                             Select Color List
                    ===============================================-->


                    <div class="col-lg-7">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title text-center d-flex justify-content-center w-100">
                                    Selected Colors & Image Upload
                                </h4>
                            </div>







                            <div class="select-color">

                                <div class="select-color-head">
                                    <a class="sec-hed">Color</a>
                                    <a class="sec-hed">Name</a>
                                    <a class="sec-hed">Hex Code</a>
                                    <a class="sec-hed">Upload Images</a>
                                    <a class="sec-hed">Add Size</a>
                                </div>

                                <div class="color-list-box">

                                    @*
                                    <div data-id="#000000" class="color-img-body">

                                    <div data-id="#000000" class="color-box">
                                    <a class="col-body">
                                    <div class="color-list-cricle" style="background: #000000;">
                                    <i class="bi bi-x close-b" style="font-size: 25px;"></i>
                                    </div>
                                    </a>
                                    <a class="color-list-name col-body">Black</a>
                                    <a class="col-body">#000000</a>
                                    <a class="col-body">
                                    <div class="add-upload-btn">
                                    <i class="bi bi-cloud-arrow-up"></i>
                                    </div>
                                    </a>
                                    <a class="col-body">
                                    <div class="add-size-btn">
                                    <i class="bi bi-plus-circle"></i>
                                    </div>
                                    </a>

                                    </div>
                                    <div class="sec-img active">
                                    <div class="card-body im-conta">
                                    <div class="row " style="flex-direction: column;">
                                    <div class="">
                                    <div class="row im-container">
                                    <div class="col-xl-6 img-container">
                                    <span>Main Image <span
                                    class="text-danger">*</span></span>
                                    <label class="label-image">
                                    <input type="file" class="mainImage" hidden>
                                    <img class="main-img selected-img"
                                    src="~/admin/icons/plus.svg" alt="">
                                    </label>
                                    <span class="text-danger"></span>
                                    </div>
                                    <div class="col-xl-6 img-container">
                                    <span>Hover Image <span
                                    class="text-danger">*</span></span>
                                    <label class="label-image">
                                    <input type="file" class="hoverImage"
                                    hidden>
                                    <img class="hover-img selected-img"
                                    src="~/admin/icons/plus.svg" alt="">
                                    </label>
                                    <span class="text-danger"></span>
                                    </div>
                                    </div>
                                    </div>
                                    <div class="add-files">
                                    <div>
                                    <span>Additional Image <span
                                    class="text-danger">*</span></span>
                                    </div>
                                    <div class="im-container">
                                    <div class="col-xl-12 additional-image">
                                    <div class="add-container">
                                    <label class="add-label-image">
                                    <input type="file"
                                    class="add-AdditionalImages"
                                    multiple hidden>
                                    <img class="hover-img-selected"
                                    src="~/admin/icons/plus.svg" alt="">
                                    </label>
                                    </div>
                                    </div>
                                    <input type="file" class="AdditionalImages" multiple
                                    hidden>
                                    </div>
                                    </div>
                                    </div>
                                    </div>
                                    </div>
                                    </div>
                                    *@



                                </div>
                            </div>




                        </div>
                    </div>
                </div>




                <!-- ==========================================
                         Add Measurements
                ===============================================-->
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title text-center d-flex justify-content-center w-100">
                                Add Measurements
                            </h4>
                        </div>





                        <table class="table table-striped table-responsive-sm add-size-table">
                            <thead>
                                <tr>
                                    <th style="width: 2%;"></th>
                                    <th style="width: 10%;">Color</th>
                                    <th style="width: 10%;">Name</th>
                                    <th style="width: 17%;">Select Size</th>
                                    <th style="width: 17%;">Count</th>
                                    <th style="width: 18%;">Weight</th>
                                    <th style="width: 24%;">Dimensions</th>
                                    <th style="width: 2%;"></th>
                                </tr>
                            </thead>
                            <tbody class="prod-size-list-container">

                                @*                     <tr data-hexcode="#000000">
                                <th></th>
                                <td>
                                <div class="color-list-cricle" style="background: #000000;">
                                </div>
                                </td>
                                <td class="prod-col">Black</td>
                                <td class="prod-size">

                                <input type="texxt" class="size-input form-control"
                                id="validationCustom" placeholder="Add Size...">

                                </td>
                                <td class="prod-count">
                                <input type="number" class="form-control count-input"
                                id="validationCustom" placeholder="Add Count...">
                                </td>
                                <td class="prod-weight">
                                <input type="number" class="form-control weight-input"
                                id="validationCustom" placeholder="Add Weight (kq)...">
                                </td>
                                <td class="prod-dimensions">
                                <input type="text" class="form-control dimensions-input"
                                id="validationCustom" placeholder="Add Dimensions...">
                                </td>
                                <td class="prod-del">
                                <div class="del-btn btn">
                                <i class="fa-regular fa-trash-can"></i>
                                </div>
                                </td>

                                </tr> *@




                            </tbody>
                        </table>










                    </div>
                    <span class="text-danger text-center" asp-validation-for="ColorSizeVM"></span>
                </div>








                <div class="col-lg-12">
                    <div class="card">
                        <div asp-validation-summary="ModelOnly"></div>
                    </div>
                </div>






                <div class="d-flex row justify-content-center">
                    <div class="d-flex row justify-content-center">
                        <button type="submit" class="btn btn-primary w-25">Submit</button>
                    </div>
                </div>

            </form>

        </div>
    </div>


</div>


















@section script {
    <script src="vendor/jquery-nice-select/js/jquery.nice-select.min.js"></script>







    <script>
        // ============================ IMAGE =================
        function imageToggle() {
            const colorBoxL = document.querySelectorAll('.color-list-box .color-img-body')

            colorBoxL.forEach(list => {
                const UploadBtn = list.querySelector('.add-upload-btn')
                const secImg = list.querySelector('.sec-img')

                UploadBtn.addEventListener('click', () => {
                    secImg.classList.toggle('active')
                });
            })
        }
        imageToggle()

        function checkImage() {
            const colorBoxL = document.querySelectorAll('.color-list-box .color-img-body')

            colorBoxL.forEach(list => {
                const UploadBtn = list.querySelector('.add-upload-btn');
                const mainImage = list.querySelector('.mainImage');
                const hoverImage = list.querySelector('.hoverImage');
                if (hoverImage.files.length > 0 && mainImage.files.length > 0) {
                    UploadBtn.style.color = 'green';
                }
            });
        }
        checkImage()
        setInterval(checkImage, 1000);

        function ImageUpload() {
            const colorImgBodies = document.querySelectorAll('.color-img-body');

            colorImgBodies.forEach((colorImgBody) => {
                const mainImageInput = colorImgBody.querySelector('.mainImage');
                const hoverImageInput = colorImgBody.querySelector('.hoverImage');
                const mainImage = colorImgBody.querySelector('.main-img');
                const hoverImage = colorImgBody.querySelector('.hover-img');
                const addAdditionalImagesInput = colorImgBody.querySelector('.add-AdditionalImages');
                const additionalImagesInput = colorImgBody.querySelector('.AdditionalImages');
                const additionalImageContainer = colorImgBody.querySelector('.additional-image');

                mainImageInput.addEventListener('change', (event) => {
                    displayImage(event, mainImage);
                });

                hoverImageInput.addEventListener('change', (event) => {
                    displayImage(event, hoverImage);
                });

                addAdditionalImagesInput.addEventListener('change', () => {
                    if (addAdditionalImagesInput.files.length > 0) {
                        const existingFiles = Array.from(additionalImagesInput.files || []);
                        const newFiles = Array.from(addAdditionalImagesInput.files);
                        const allFiles = [...existingFiles, ...newFiles];

                        const dt = new DataTransfer();
                        allFiles.forEach(file => dt.items.add(file));
                        additionalImagesInput.files = dt.files;

                        for (const file of newFiles) {
                            const reader = new FileReader();
                            reader.onload = (e) => {
                                if (file.type.match('image.*')) {
                                    const imageBoxDiv = document.createElement('div');
                                    imageBoxDiv.classList.add('add-container', 'add-img-box');

                                    const label = document.createElement('label');
                                    label.classList.add('add-label-image');
                                    label.dataset.file = file.name;

                                    const img = document.createElement('img');
                                    img.classList.add('hover-img-selected');
                                    img.src = e.target.result;
                                    img.alt = file.name;

                                    const removeLink = document.createElement('a');
                                    removeLink.classList.add('remove-img');
                                    removeLink.innerHTML = '<i class="fa-regular fa-trash-can"></i>';

                                    label.appendChild(removeLink);
                                    label.appendChild(img);
                                    imageBoxDiv.appendChild(label);
                                    additionalImageContainer.insertBefore(imageBoxDiv, additionalImageContainer.lastChild);
                                } else {
                                    alert("Please select an image file!");
                                    addAdditionalImagesInput.value = "";
                                }
                            };
                            reader.readAsDataURL(file);
                        }

                        addAdditionalImagesInput.value = '';
                    }
                });

                additionalImageContainer.addEventListener('click', (event) => {
                    if (event.target.classList.contains('fa-trash-can')) {
                        const label = event.target.closest('.add-label-image');
                        const fileNameToRemove = label.dataset.file;

                        const dt = new DataTransfer();
                        for (const file of additionalImagesInput.files) {
                            if (file.name !== fileNameToRemove) {
                                dt.items.add(file);
                            }
                        }
                        additionalImagesInput.files = dt.files;

                        label.closest('.add-img-box').remove();
                    }
                });

                function displayImage(event, imgElement) {
                    const selectedFile = event.target.files[0];

                    if (selectedFile) {
                        const reader = new FileReader();

                        reader.onload = function (e) {
                            imgElement.src = e.target.result;
                            imgElement.style.width = '100%';
                            imgElement.style.height = '100%';
                            imgElement.style.objectFit = 'cover';
                            imgElement.style.objectPosition = 'top center';
                        };

                        if (selectedFile.type.match('image.*')) {
                            reader.readAsDataURL(selectedFile);
                        } else {
                            alert("Please select an image file!");
                            event.target.value = "";
                        }
                    }
                }
            });
        }


        document.addEventListener('DOMContentLoaded', () => {
            ImageUpload();
        });

        //=================== CATEGORY


        //******* Search
        document.addEventListener('DOMContentLoaded', () => {
            const categorySearch = document.querySelector('.category-search');
            const categoryList = document.querySelector('.category-list');
            const listItemsCat = categoryList.querySelectorAll('.list-categ');

            categorySearch.addEventListener('input', () => {
                const searchTerm = categorySearch.value.trim().toLowerCase();

                listItemsCat.forEach(item => {
                    const categoryName = item.querySelector('.cat-name').textContent.trim().toLowerCase();
                    const parentName = item.querySelector('.par-name').textContent.trim().toLowerCase();

                    if (categoryName.includes(searchTerm) || parentName.includes(searchTerm)) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });


            });
        });



        //******* Close-Togle
        const CatselectBtn = document.querySelector('.select-btn-category')
        const CatLiContainer = document.querySelector('.col-container-category')

        CatselectBtn.addEventListener('click', () => {
            if (!CatselectBtn.classList.contains('active')) {
                CatselectBtn.classList.add('active')
                CatLiContainer.classList.add('active')
            } else {
                CatselectBtn.classList.remove('active')
                CatLiContainer.classList.remove('active')
            }
        })


        //******* Add
        function AddCategory() {
            const listItemsCat = document.querySelectorAll('.list-categ');

            listItemsCat.forEach(item => {
                let name = item.querySelector('.cat-name').textContent;
                let id = parseInt(item.getAttribute('data-id'), 10);

                item.addEventListener('mousedown', (event) => {
                    const SelectedCategories = document.querySelector('.selected-category-box');
                    const catList = SelectedCategories.querySelectorAll('.category-box');

                    if (item.classList.contains('btn-primary')) {
                        item.classList.remove('btn-primary')

                        catList.forEach(list => {
                            const listName = list.querySelector('.cat-name-selected').textContent
                            console.log(listName)

                            if (listName === name) {
                                list.remove()
                            }
                        })
                    } else {
                        item.classList.add('btn-primary');

                        SelectedCategories.innerHTML += `
                                                                                                            <li data-id="${id}" class="category-box">
                                                                                                                <span class="cat-name-selected">${name}</span>
                                                                                                                <a data-id="${id}" class="cat-remove">
                                                                                                                    <i class="fa-solid fa-xmark"></i>
                                                                                                                    <input value="${name}" type="text" hidden>
                                                                                                                </a>
                                                                                                            </li>
                                                                                                        `;
                        RemoveCategory();
                    }
                });
            });
        }

        AddCategory();




        //******* Remove
        function RemoveCategory() {
            const SelectedCategories = document.querySelector('.selected-category-box')
            const catList = SelectedCategories.querySelectorAll('.category-box')

            catList.forEach(list => {
                const delBtn = list.querySelector('.cat-remove')
                const catName = list.querySelector('.cat-name-selected').textContent
                delBtn.addEventListener('click', () => {
                    list.remove()


                    const listItemsCat = document.querySelectorAll('.list-categ');


                    listItemsCat.forEach(item => {
                        let name = item.querySelector('.cat-name').textContent
                        console.log(name)
                        console.log(catName)

                        if (name == catName) {
                            item.classList.remove('btn-primary')
                        }

                    })

                })

            })


        }


        RemoveCategory()








        //=================== TAG


        // //******* Search
        document.addEventListener('DOMContentLoaded', () => {
            const tagSearch = document.querySelector('.tag-search');
            const tagList = document.querySelector('.tag-list');
            const listItemsTag = tagList.querySelectorAll('.list-tag');

            tagSearch.addEventListener('input', () => {
                const searchTerm = tagSearch.value.trim().toLowerCase();

                listItemsTag.forEach(item => {
                    const tagName = item.querySelector('.tag-name').textContent.trim().toLowerCase();

                    if (tagName.includes(searchTerm)) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });

            });
        });



        // //******* Close-Togle
        const TagselectBtn = document.querySelector('.select-btn-tag')
        const TagLiContainer = document.querySelector('.col-container-tag')

        TagselectBtn.addEventListener('click', () => {
            if (!TagselectBtn.classList.contains('active')) {
                TagselectBtn.classList.add('active')
                TagLiContainer.classList.add('active')
            } else {
                TagselectBtn.classList.remove('active')
                TagLiContainer.classList.remove('active')
            }
        })


        //******* Add
        function AddTag() {
            const listItemsTag = document.querySelectorAll('.list-tag');


            listItemsTag.forEach(item => {
                let name = item.querySelector('.tag-name').textContent
                let id = item.getAttribute('data-id');


                item.addEventListener('mousedown', (event) => {
                    const SelectedTag = document.querySelector('.selected-tag-box')
                    const tagList = SelectedTag.querySelectorAll('.tag-box')

                    if (item.classList.contains('btn-primary')) {
                        item.classList.remove('btn-primary')

                        tagList.forEach(list => {
                            const listName = list.querySelector('.tag-name').textContent
                            console.log(listName)

                            if (listName === name) {
                                list.remove()
                            }
                        })

                    } else {
                        item.classList.add('btn-primary')

                        console.log(tagList)


                        SelectedTag.innerHTML +=
                            `
                                                                                                                                    <li data-id="${id}" class="tag-box">
                                                                                                                                       <span class="tag-name">${name}</span>
                                                                                                                                       <a data-id="${name}" class="tag-remove">
                                                                                                                                          <i class="fa-solid fa-xmark"></i>
                                                                                                                                          <input asp-for="Tags.Name" value="${name}" type="text" hidden>
                                                                                                                                       </a>
                                                                                                                                    </li>
                                                                                                                                    `
                        RemoveTag()
                    }
                })

            })
        }

        AddTag()


        // //******* Remove
        function RemoveTag() {
            const SelectedTag = document.querySelector('.selected-tag-box')
            const tagList = SelectedTag.querySelectorAll('.tag-box')

            tagList.forEach(list => {
                const delBtn = list.querySelector('.tag-remove')
                const tagName = list.querySelector('.tag-name').textContent
                delBtn.addEventListener('click', () => {
                    list.remove()


                    const listItemsTag = document.querySelectorAll('.list-tag');


                    listItemsTag.forEach(item => {
                        let name = item.querySelector('.tag-name').textContent
                        console.log(name)
                        console.log(tagName)

                        if (name == tagName) {
                            item.classList.remove('btn-primary')
                        }

                    })

                })

            })


        }


        RemoveTag()
















        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('Form');

            form.addEventListener('submit', async (event) => {
                event.preventDefault();

                const formData = new FormData(form);

                // Tag Submission
                const selectedTagBox = document.querySelector('.selected-tag-box');
                const tagBoxes = selectedTagBox.querySelectorAll('.tag-box');
                let selectedTagIds = Array.from(tagBoxes).map(tagBox => parseInt(tagBox.getAttribute('data-id'), 10));
                selectedTagIds.forEach((tagId, index) => {
                    formData.append(`SelectedTagIds[${index}]`, tagId);
                });

                // Category Submission
                const selectedCategoryBox = document.querySelector('.selected-category-box');
                const categoryBoxes = selectedCategoryBox.querySelectorAll('.category-box');
                let selectedCategoryIds = Array.from(categoryBoxes).map(categoryBox => parseInt(categoryBox.getAttribute('data-id'), 10));
                selectedCategoryIds.forEach((categoryId, index) => {
                    formData.append(`SelectedCategoryIds[${index}]`, categoryId);
                });

                //Gender
                var selectElement = document.querySelector('.default-select');
                var selectedValue = selectElement.value;
                formData.append('SelectedGender', selectedValue);
                console.log('Selected Value:', selectedValue);


                // Color & Size Submission
                const colorSizeData = [];
                const colorImgBodies = document.querySelectorAll('.color-img-body');
                colorImgBodies.forEach((colorImgBody, colorIndex) => {
                    const hexCode = colorImgBody.getAttribute('data-id');
                    const colorName = colorImgBody.querySelector('.color-list-name').innerText;

                    const sizes = [];
                    const sizeRows = document.querySelectorAll(`.prod-size-list-container tr[data-hexcode="${hexCode}"]`);
                    sizeRows.forEach((row, sizeIndex) => {
                        const size = row.querySelector('.size-input').value;
                        const count = row.querySelector('.count-input').value;
                        const weight = row.querySelector('.weight-input').value;
                        const dimensions = row.querySelector('.dimensions-input').value;
                        sizes.push({ size, count, weight, dimensions });

                        formData.append(`ColorSizeVM[${colorIndex}].Sizes[${sizeIndex}].size`, size);
                        formData.append(`ColorSizeVM[${colorIndex}].Sizes[${sizeIndex}].count`, count);
                        formData.append(`ColorSizeVM[${colorIndex}].Sizes[${sizeIndex}].weight`, weight);
                        formData.append(`ColorSizeVM[${colorIndex}].Sizes[${sizeIndex}].dimensions`, dimensions);
                    });

                    const mainImage = colorImgBody.querySelector('.mainImage').files[0];
                    const hoverImage = colorImgBody.querySelector('.hoverImage').files[0];
                    const additionalImages = Array.from(colorImgBody.querySelectorAll('.AdditionalImages')).map(input => Array.from(input.files)).flat();

                    const images = {
                        mainImage: mainImage ? mainImage.name : null,
                        hoverImage: hoverImage ? hoverImage.name : null,
                        additionalImages: additionalImages.map(file => file.name)
                    };

                    colorSizeData.push({ colorName, hexCode, sizes, images });

                    formData.append(`ColorSizeVM[${colorIndex}].HexCode`, hexCode);
                    formData.append(`ColorSizeVM[${colorIndex}].ColorName`, colorName);

                    if (mainImage) formData.append(`ColorSizeVM[${colorIndex}].Images.MainImage`, mainImage);
                    if (hoverImage) formData.append(`ColorSizeVM[${colorIndex}].Images.HoverImage`, hoverImage);
                    additionalImages.forEach((file, fileIndex) => {
                        formData.append(`ColorSizeVM[${colorIndex}].Images.AdditionalImages`, file);
                    });
                });

                formData.append('ColorSizeData', JSON.stringify(colorSizeData));

                try {
                    const response = await fetch('Create', {
                        method: form.method,
                        body: formData,
                    });

                    window.location.href = response.url;
                } catch (error) {
                    console.error('Error:', error);
                }




            });
        });













































        // Color

        const colorSelect = document.getElementById("color");
        const hexKod = document.querySelector(".hexKod");

        colorSelect.addEventListener("input", () => {
            hexKod.value = colorSelect.value;
        });

        hexKod.addEventListener("input", () => {
            const hexValue = hexKod.value.trim();

            if (/^#([0-9A-F]{3}){1,2}$/i.test(hexValue)) {
                colorSelect.value = hexValue;
            }
        });

        // Color



        // New Color Toggle
        const colorNewBtn = document.querySelector('.color-new-btn')
        const newColor = document.querySelector('.new-color')

        colorNewBtn.addEventListener('click', () => {
            newColor.classList.toggle('active')
        })



        //=================== COLOR SEARCH

        document.addEventListener('DOMContentLoaded', () => {
            const colorSearch = document.querySelector('.color-search');
            const colorList = document.querySelector('.col-list');
            const listItems = colorList.querySelectorAll('.list-c');

            colorSearch.addEventListener('input', () => {
                const searchTerm = colorSearch.value.toLowerCase();

                listItems.forEach(item => {
                    const colorName = item.querySelector('span').textContent.toLowerCase();
                    item.style.display = colorName.includes(searchTerm) ? 'block' : 'none';
                });
            });
        });







        //=================== Table Color Box






        //=================== COLOR SELECT

        const ColorBox = document.querySelector('.color-list-box')

        const inputValues = {};

        function AddSize() {
            const sizeContainerBox = document.querySelector('.prod-size-list-container');
            const ColorBoxList = document.querySelectorAll('.color-list-box .color-img-body');

            ColorBoxList.forEach((colList, colorIndex) => {
                const addSize = colList.querySelector('.add-size-btn');
                const hexCode = colList.getAttribute('data-id');
                const ColorName = colList.querySelector('.color-list-name').innerText;

                addSize.addEventListener('click', () => {
                    const newTr = document.createElement("tr");
                    newTr.dataset.hexcode = hexCode;
                    const trIndex = sizeContainerBox.children.length;

                    newTr.innerHTML = `
                                                                <th></th>
                                                                <td>
                                                                    <div class="color-list-cricle" style="background: ${hexCode};"></div>
                                                                </td>
                                                                <td class="prod-col">${ColorName}</td>
                                                                <td class="prod-size">
                                                                    <input type="text" class="size-input form-control" placeholder="Add Size..." >
                                                                </td>
                                                                <td class="prod-count">
                                                                     <input type="number" class="form-control count-input" id="validationCustom"
                                                                            placeholder="Add Count..." >
                                                                 </td>
                                                                         <td class="prod-weight">
                                                                     <input type="number" class="form-control weight-input" id="validationCustom"
                                                                            placeholder="Add Weight (Gram)...">
                                                                 </td>
                                                                 <td class="prod-dimensions">
                                                                     <input type="text" class="form-control dimensions-input" id="validationCustom"
                                                                            placeholder="Add Dimensions...">
                                                                 </td>
                                                                <td class="prod-del">
                                                                    <div class="del-btn btn">
                                                                        <i class="fa-regular fa-trash-can"></i>
                                                                    </div>
                                                                </td>
                                                            `;
                    newTr.querySelectorAll('input').forEach(input => {
                        input.addEventListener('input', function () {
                            if (this.type === 'number' && this.value < 1) {
                                this.value = 1;
                            }


                            inputValues[inputKey] = {
                                ...inputValues[inputKey],
                                [this.className]: this.value
                            };
                        });
                    });
                    const inputKey = `${colorIndex}-${trIndex}`;
                    if (inputValues[inputKey]) {
                        newTr.querySelector('.size-input').value = inputValues[inputKey].size || "";
                    }

                    newTr.querySelectorAll('input').forEach(input => {
                        input.addEventListener('input', function () {
                            inputValues[inputKey] = {
                                ...inputValues[inputKey],
                                [this.className]: this.value
                            };
                        });
                    });

                    sizeContainerBox.appendChild(newTr);
                });
            });
        }

        AddSize();



        const selectBtn = document.querySelector('.select-butn')
        const colContainer = document.querySelector('.col-container')

        selectBtn.addEventListener('click', () => {
            if (!selectBtn.classList.contains('active')) {
                selectBtn.classList.add('active')
                colContainer.classList.add('active')
            } else {
                selectBtn.classList.remove('active')
                colContainer.classList.remove('active')
            }
        })

        const colorList = document.querySelectorAll('.list-c');











        document.addEventListener('DOMContentLoaded', () => {
            const colorList = document.querySelectorAll('.list-c');

            colorList.forEach(list => {
                list.addEventListener('click', (event) => {
                    let colorExists = true;

                    if (!event.target.matches('input')) {
                        const name = list.querySelector('.col-nam-c');
                        let hexCode = list.getAttribute('data-hexcode');

                        const selectedColors = document.querySelectorAll('.color-list-box .color-img-body');
                        console.log(selectedColors);

                        selectedColors.forEach(cols => {
                            let hcod = cols.getAttribute('data-id');
                            let cName = cols.querySelector('.color-list-name').innerText;

                            if (hcod === hexCode || name.innerText === cName) {
                                alert(`This color is already selected`);
                                colorExists = false;
                                return;
                            }
                        });

                        const colorBox = document.querySelector('.color-list-box');

                        if (colorExists) {
                            colorBox.innerHTML += `
                                                        <div data-id="${hexCode}" class="color-img-body">
                                                            <div data-id="${hexCode}" class="color-box">
                                                                <a class="col-body">
                                                                    <div class="color-list-cricle" style="background: ${hexCode};">
                                                                        <i class="bi bi-x close-b" style="font-size: 25px;"></i>
                                                                    </div>
                                                                </a>
                                                                <a class="color-list-name col-body">${name.innerText}</a>
                                                                <a class="col-body">${hexCode}</a>
                                                                <a class="col-body">
                                                                    <div class="add-upload-btn">
                                                                        <i class="bi bi-cloud-arrow-up"></i>
                                                                    </div>
                                                                </a>
                                                                <a class="col-body">
                                                                    <div class="add-size-btn">
                                                                        <i class="bi bi-plus-circle"></i>
                                                                    </div>
                                                                </a>
                                                            </div>
                                                            <div class="sec-img">
                                                                <div class="card-body im-conta">
                                                                    <div class="row" style="flex-direction: column;">
                                                                        <div class="">
                                                                            <div class="row im-container">
                                                                                <div class="col-xl-6 img-container">
                                                                                    <span>Main Image <span class="text-danger">*</span></span>
                                                                                    <label class="label-image">
                                                                                        <input type="file" class="mainImage" hidden>
                                                                                                        <img class="main-img selected-img" src="@Url.Content("~/admin/icons/plus.svg")" alt="">
                                                                                    </label>
                                                                                    <span class="text-danger"></span>
                                                                                </div>
                                                                                <div class="col-xl-6 img-container">
                                                                                    <span>Hover Image <span class="text-danger">*</span></span>
                                                                                    <label class="label-image">
                                                                                        <input type="file" class="hoverImage" hidden>
                                                                                                                <img class="hover-img selected-img" src="@Url.Content("~/admin/icons/plus.svg")" alt="">
                                                                                    </label>
                                                                                    <span class="text-danger"></span>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="add-files">
                                                                            <div>
                                                                                <span>Additional Image <span class="text-danger">*</span></span>
                                                                            </div>
                                                                            <div class="im-container">
                                                                                <div class="col-xl-12 additional-image">
                                                                                    <div class="add-container">
                                                                                        <label class="add-label-image">
                                                                                            <input type="file" class="add-AdditionalImages" multiple hidden>
                                                                                    <img class="hover-img-selected" src="@Url.Content("~/admin/icons/plus.svg")" alt="">

                                                                                        </label>
                                                                                    </div>
                                                                                </div>
                                                                                <input type="file" class="AdditionalImages" multiple hidden>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    `;
                            SizeDelete();
                            AddSize();
                            ColorRemove();
                            imageToggle();
                            checkImage();
                            ImageUpload();

                            list.style.background = "#886CC0";
                            list.style.color = "#ffffff";
                        }
                    }
                });
            });
        });






        function ColorRemove() {
            const SelectedColors = document.querySelectorAll('.color-list-box .color-img-body')
            let nam = "";
            SelectedColors.forEach(color => {
                let colorBox = color.querySelector('.color-list-cricle')
                let colNam = color.querySelector('.color-list-name')

                colorBox.addEventListener('click', () => {

                    const colLists = document.querySelectorAll('.col-list label')

                    colLists.forEach(lis => {
                        let selcNam = lis.querySelector('span')

                        if (colNam.innerText == selcNam.innerText) {
                            lis.style.background = 'inherit'
                            lis.style.color = 'inherit'
                        }
                    })

                    nam = colNam.innerText;
                    color.remove()


                    const prodSizeListContainer = document.querySelectorAll('.prod-size-list-container tr')


                    prodSizeListContainer.forEach(sizeList => {
                        let col = sizeList.querySelector('.prod-col')
                        console.log(nam)

                        if (col.innerText == nam) {
                            sizeList.remove()

                        }
                    })

                })
            })



        }

        ColorRemove();
        //=================== COLOR SELECT







        //=================== COLOR CREATE
        document.addEventListener('DOMContentLoaded', () => {
            const colorCreateBtn = document.querySelector('.color-crt-btn');

            colorCreateBtn.addEventListener('click', () => {
                const colorNameInput = document.querySelector('.color-nam');
                const hexCodeInput = document.querySelector(".c-inp");

                let colorExists = true;

                if (colorNameInput.value.trim() === "") {
                    alert("Please enter color name");
                    colorExists = false;
                }

                const colorList = document.querySelectorAll('.list-c');

                colorList.forEach(list => {
                    let listHexCode = list.getAttribute('data-hexcode');
                    let listColorName = list.querySelector('span').innerText.trim();

                    if (hexCodeInput.value === listHexCode || colorNameInput.value.trim() === listColorName) {
                        alert(`You cannot create the existing color! If you want to choose this color, you can choose from the "${listHexCode}-${listColorName}" color options...`);
                        colorExists = false;
                    }
                });

                const selectedColors = document.querySelectorAll('.color-list-box .color-img-body');

                selectedColors.forEach(cols => {
                    let hcod = cols.getAttribute('data-id');
                    let cName = cols.querySelector('.color-list-name').innerText.trim();

                    if (hcod === hexCodeInput.value || colorNameInput.value.trim() === cName) {
                        alert(`This color is already selected`);
                        colorExists = false;
                    }
                });

                if (colorExists) {
                    const colorsBox = document.querySelector('.color-list-box');

                    colorsBox.innerHTML +=
                        `
                                                <div data-id="${hexCodeInput.value}" class="color-img-body">
                                                    <div data-id="${hexCodeInput.value}" class="color-box">
                                                        <a class="col-body">
                                                            <div class="color-list-cricle" style="background: ${hexCodeInput.value};">
                                                                <i class="bi bi-x close-b" style="font-size: 25px;"></i>
                                                            </div>
                                                        </a>
                                                        <a class="color-list-name col-body">${colorNameInput.value.trim()}</a>
                                                        <a class="col-body">${hexCodeInput.value}</a>
                                                        <a class="col-body">
                                                            <div class="add-upload-btn">
                                                                <i class="bi bi-cloud-arrow-up"></i>
                                                            </div>
                                                        </a>
                                                        <a class="col-body">
                                                            <div class="add-size-btn">
                                                                <i class="bi bi-plus-circle"></i>
                                                            </div>
                                                        </a>
                                                    </div>
                                                    <div class="sec-img">
                                                        <div class="card-body im-conta">
                                                            <div class="row" style="flex-direction: column;">
                                                                <div class="">
                                                                    <div class="row im-container">
                                                                        <div class="col-xl-6 img-container">
                                                                            <span>Main Image <span class="text-danger">*</span></span>
                                                                            <label class="label-image">
                                                                                <input type="file" class="mainImage" hidden>
                                                                                <img class="main-img selected-img" src="~/admin/icons/plus.svg" alt="">
                                                                            </label>
                                                                            <span class="text-danger"></span>
                                                                        </div>
                                                                        <div class="col-xl-6 img-container">
                                                                            <span>Hover Image <span class="text-danger">*</span></span>
                                                                            <label class="label-image">
                                                                                <input type="file" class="hoverImage" hidden>
                                                                                <img class="hover-img selected-img" src="~/admin/icons/plus.svg" alt="">
                                                                            </label>
                                                                            <span class="text-danger"></span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="add-files">
                                                                    <div>
                                                                        <span>Additional Image <span class="text-danger">*</span></span>
                                                                    </div>
                                                                    <div class="im-container">
                                                                        <div class="col-xl-12 additional-image">
                                                                            <div class="add-container">
                                                                                <label class="add-label-image">
                                                                                    <input type="file" class="add-AdditionalImages" multiple hidden>
                                                                                    <img class="hover-img-selected" src="~/admin/icons/plus.svg" alt="">
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                        <input type="file" class="AdditionalImages" multiple hidden>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                `;
                    AddSize();
                    ColorRemove();
                    imageToggle();
                    checkImage();
                    ImageUpload();
                }
            });
        });



        //=================== COLOR CREATE









        //=================== SIZE CREATE
        function SizeDelete() {
            const prodSizeListContainer = document.querySelector('.prod-size-list-container');
            prodSizeListContainer.addEventListener('click', (event) => {
                const delBtn = event.target.closest('.del-btn');
                if (delBtn) {
                    delBtn.closest('tr').remove();
                }
            })
        }

        document.addEventListener('DOMContentLoaded', () => {
            SizeDelete();
        });
        //=================== SIZE CREATE






        // Price Calculator
        const priceInput = document.querySelector('.price');
        const discountInput = document.querySelector('.discount');
        const offerInput = document.querySelector('.offer');

        function calculateDiscount() {
            const price = parseFloat(priceInput.value) || 0;
            let discountPrice = parseFloat(discountInput.value);

            if (!isNaN(price) && !isNaN(discountPrice) && price > 0) {
                discountPrice = Math.max(0, Math.min(price, discountPrice));
                const offer = ((price - discountPrice) / price) * 100;
                offerInput.value = offer.toFixed(0);
                discountInput.value = discountPrice.toFixed(2);
            } else {
                discountInput.value = "";
                offerInput.value = "";
            }
        }

        function calculateOffer() {
            let offer = parseFloat(offerInput.value);
            const price = parseFloat(priceInput.value) || 0;

            if (!isNaN(price) && !isNaN(offer) && price > 0) {
                offer = Math.max(0, Math.min(100, offer));
                offerInput.value = offer.toFixed(0);
                const discountPrice = price * (1 - (offer / 100));
                discountInput.value = discountPrice.toFixed(2);
            } else {
                offerInput.value = "";
                discountInput.value = "";
            }
        }

        function calculatePrice() {
            const offer = parseFloat(offerInput.value) || 0;
            const discountPrice = parseFloat(discountInput.value) || 0;

            if (!isNaN(offer) && !isNaN(discountPrice) && offer >= 0 && offer <= 100) {
                const price = discountPrice / (1 - (offer / 100));
                priceInput.value = price.toFixed(2);
            } else {
                priceInput.value = "";
            }
        }

        discountInput.addEventListener('input', () => {
            if (discountInput.value === "") {
                offerInput.value = "";
            } else {
                calculateDiscount();
            }
        });

        offerInput.addEventListener('input', () => {
            if (offerInput.value === "") {
                discountInput.value = "";
            } else {
                calculateOffer();
            }
        });

        priceInput.addEventListener('input', () => {
            const price = parseFloat(priceInput.value) || 0;
            if (price === 0) {
                discountInput.value = "";
                offerInput.value = "";
            } else {
                calculateDiscount();
            }
        });

        discountInput.addEventListener('keydown', (event) => {
            if (event.key === 'Backspace' && discountInput.value.length === 1) {
                discountInput.value = "";
                offerInput.value = "";
            }
        });







    </script>












}
