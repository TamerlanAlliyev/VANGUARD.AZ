@using Microsoft.AspNetCore.Identity
@inject UserManager<Vanguard.Models.AppUser> UserManager
@{
    var user = UserManager.GetUserAsync(User).Result;
    var basketCount = TempData["BasketItemCount"] != null ? TempData["BasketItemCount"].ToString() : "0";
    var wishCount = TempData["WishItemCount"] != null ? TempData["WishItemCount"].ToString() : "0";

}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description"
          content="Our men's activewear brand offers performance-driven, stylish clothes for workouts, running, and everyday comfort. Explore our moisture-wicking shirts, breathable pants, and gym shorts with pockets.">
    <meta name="keywords"
          content="men's activewear, men's moisture-wicking shirts, men's breathable workout pants, men's gym shorts with pockets, men's activewear Baku">
    <meta name="robots" content="index, follow">
    <meta name="author" content="Men's Activewear Brand">
    <!-- Open Graph meta tags -->
    <meta property="og:title" content="Vanguard: Men's Activewear | Stylish Performance Clothing">
    <meta property="og:description"
          content="Our men's activewear brand offers performance-driven, stylish clothes for workouts, running, and everyday comfort. Explore our moisture-wicking shirts, breathable pants, and gym shorts with pockets.">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://vanguardaz.netlify.app/">
    <meta property="og:image" content="https://vanguardaz.netlify.app//images/logo.png">
    <!-- Twitter Card meta tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Vanguard: Men's Activewear | Stylish Performance Clothing">
    <meta name="twitter:description"
          content="Our men's activewear brand offers performance-driven, stylish clothes for workouts, running, and everyday comfort. Explore our moisture-wicking shirts, breathable pants, and gym shorts with pockets.">
    <meta name="twitter:image" content="https://vanguardaz.netlify.app//images/logo.png">
    <!-- Geo Meta Tags -->
    <meta name="geo.region" content="AZ" />
    <meta name="geo.placename" content="Baku" />
    <!-- Facebook Meta Tags -->
    <meta property="fb:app_id" content="YOUR_FACEBOOK_APP_ID">
    <!-- Instagram Meta Tags -->
    <meta property="instgram:card" content="summary_large_image">
    <meta property="instgram:title" content="Vanguard: Men's Activewear | Stylish Performance Clothing">
    <meta property="instgram:description"
          content="Our men's activewear brand offers performance-driven, stylish clothes for workouts, running, and everyday comfort. Explore our moisture-wicking shirts, breathable pants, and gym shorts with pockets.">
    <meta property="instgram:image" content="https://vanguardaz.netlify.app//images/logo.png">
    <!-- Canonical URL -->
    <link rel="canonical" href="https://vanguardaz.netlify.app/" />
    <!-- Favicon -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Manrope&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
          rel="stylesheet">
    <!-- Link Swiper's CSS -->
    <link rel="stylesheet" href="~/cilent/assets/css/swiper-bundle.min.css">
    <link rel="stylesheet" href="~/cilent/assets/css/index.css">
    @await RenderSectionAsync("style", false)
    <!-- Favicon -->
    <link rel="icon" href="~/cilent/assets/icons/small-logo.svg" sizes="192x192" type="image/x-icon" />

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet" />
    <title>Vanguard</title>

    <style>
        .basket-prices-count-input {
            display: flex;
            align-items: center;
            flex-direction: inherit;
            justify-content: space-between;
        }

        .searchs .basket-list .basket-product-list ul .basket-prod .basket-price-close {
            display: flex;
            flex-direction: column;
            align-items: inherit;
            justify-content: space-between;
        }

            .searchs .basket-list .basket-product-list ul .basket-prod .basket-price-close a {
                cursor: pointer;
                display: flex;
                justify-content: end;
            }

        .basket-prices-count-input {
            display: flow;
        }

        .searchs .basket-list {
            width: 40%;
            padding: 24px 36px;
        }
    </style>

    <script>
        sendPaginationClickEventListeners();
    </script>
</head>
<body>

    <!-- ================================
            HEADER    -    START
    ===================================== -->
    <header>

        <div class="header-info">

            <div class="page-list">

                <a class="bur-menu" href="#">
                    <img src="~/cilent/assets/icons/burger-menu.svg" alt="">
                </a>

                <nav class="pages-pc">
                    <ul>
                        <li><a asp-controller="Home" asp-action="Index">Home</a></li>
                        <li><a asp-controller="Shop" asp-action="Index">Shop</a></li>
                        <li><a asp-controller="About" asp-action="Index">About</a></li>
                        <li><a asp-controller="Blog" asp-action="Index" asp-area="">Blog</a></li>
                        <li><a asp-controller="Contact" asp-action="Index">Contact</a></li>
                    </ul>
                </nav>

            </div>

            <div class="brand-logo">
                <a asp-controller="Home" asp-action="Index">VANGUARD</a>
            </div>

            <div class="header-icons">

                <a class="i-search" href="#">
                    <img src="~/cilent/assets/icons/search.svg" alt="">
                </a>

                <div class="arrow"></div>

                <div class="icons-right">

                    <a class="i-user" href="#">
                        <img src="~/cilent/assets/icons/user.svg" alt="">
                    </a>
                    <a class="i-basket">
                        <img src="~/cilent/assets/icons/basket.svg" alt="">
                        <sup>@basketCount</sup>
                    </a>
                    <a class="i-wish" asp-controller="Setting" asp-action="Index" asp-route-id="3">
                        <img src="~/cilent/assets/icons/wish.svg" alt="">
                        <sup>@wishCount</sup>
                    </a>

                </div>
            </div>

        </div>



        <div class="searchs">

            <div class="basket-list">
                @await Component.InvokeAsync("Basket")
            </div>


            <div class="user-info">

                @if (User.Identity != null)
                {
                    @if (user != null)
                    {
                        <h3>@user.FullName</h3>
                        <ul>
                            <li><a href="#">My Account</a></li>
                            <li><a href="#">Basket</a></li>
                            <li><a href="#">Wish List</a></li>
                            <li><a asp-controller="Account" asp-action="Logout">Log Out</a></li>
                        </ul>
                        @if (await UserManager.IsInRoleAsync(user, "Admin"))
                        {
                            <h4><a class="go-admin" asp-area="Admin" asp-action="Index" asp-controller="Home">Go Dashboard</a></h4>
                        }
                    }
                    else
                    {
                        <ul>

                            <li><a asp-controller="Account" asp-action="Login">Login</a></li>
                            <li><a asp-controller="Account" asp-action="Register">Register</a></li>
                        </ul>

                    }
                }


            </div>

            <div class="search-list">
                <input type="text" id="searchProduct" placeholder="Search...">

                <ul id="SearchedProd">

                   @await Component.InvokeAsync("Search")

                </ul>
            </div>

            <nav class="pages-mobile">

                <a class="pages-close" href="#"><img src="~/cilent/assets/icons/x-button.svg" alt=""></a>




                <ul>
                    @if (User.Identity != null)
                    {
                        @if (user != null)
                        {
                            <li><a asp-action="Index" asp-controller="Home">Home</a></li>
                            <li><a asp-action="Index" asp-controller="Shop">Shop</a></li>
                            <li><a asp-action="Index" asp-controller="Blog">Blog</a></li>
                            <li><a asp-action="Index" asp-controller="About">About</a></li>
                            <li><a asp-action="Index" asp-controller="Contact">Contact</a></li>
                            <li><a asp-controller="Setting" asp-action="Index" asp-route-id="1">My Account </a></li>
                            <li><a asp-controller="Setting" asp-action="Index" asp-route-id="3">Wish List</a></li>
                            <li><a asp-action="Logout" asp-controller="Account">Log Out</a></li>
                        }
                        else
                        {
                            <li><a asp-action="Index" asp-controller="Home">Home</a></li>
                            <li><a asp-action="Index" asp-controller="Shop">Shop</a></li>
                            <li><a asp-action="Index" asp-controller="Blog">Blog</a></li>
                            <li><a asp-action="Index" asp-controller="About">About</a></li>
                            <li><a asp-action="Index" asp-controller="Contact">Contact</a></li>
                            <li><a asp-controller="Setting" asp-action="Index" asp-route-id="3">Wish List</a></li>
                            <li><a asp-action="Login" asp-controller="Account">Login</a></li>
                            <li><a asp-action="Register" asp-controller="Account">Register</a></li>
                        }

                    }
 
                </ul>
            </nav>

        </div>

    </header>
    <!-- ================================
            HEADER    -    END
    ===================================== -->
    @RenderBody()

    <!-- ================================
            FOOTER    -    START
    ===================================== -->
    <footer>

        <div class="footer-top">

            <div class="brand-info">

                <h1>VANGUARD</h1>

                <div class="contact">





                    <div class="brand-ad">
                        <img src="~/cilent/assets/icons/location.svg" alt="logo">
                        <a>Port Baku Mall, 151 Neftchilar Avenue, Baku</a>
                    </div>

                    <div class="brand-ad">
                        <img src="~/cilent/assets/icons/mail.svg" alt="logo">
                        <a href="mailto:vanguardfashionaz@gmail.com" target="_blank">vanguardfashionaz@gmail.com</a>
                    </div>

                    <div class="brand-ad">
                        <img src="~/cilent/assets/icons/phone.svg" alt="logo">
                        <a href="tel:+994507101015" target="_blank">+994507101015</a>
                    </div>

                </div>

                <div class="social-platforms">
                    <a href="https://www.facebook.com/profile.php?id=61550959731138" target="_blank">
                        <img src="~/cilent/assets/icons/facebook.svg" alt="facebook">
                    </a>
                    <a href="https://www.instagram.com/vanguard.az/" target="_blank">
                        <img src="~/cilent/assets/icons/instagram.svg" alt="instagram">
                    </a>
                    <a href="#" target="_blank"><img src="~/cilent/assets/icons/twitter-x.svg" alt="twitter"></a>
                    <a href="https://www.linkedin.com/in/tamerlan-aliyev-74a693284/" target="_blank">
                        <img src="~/cilent/assets/icons/linkedin.svg" alt="linkedin">
                    </a>
                    <a href="https://wa.me/994507101015" target="_blank">
                        <img src="~/cilent/assets/icons/whatsapp.svg"
                             alt="whatsapp">
                    </a>
                </div>
            </div>

            <div class="web-info">

                <div class="info-list">
                    <h3>Information</h1>

                        <ul>
                            <li><a href="#">About Us</a></li>
                            <li><a href="#">Contact Us</a></li>
                            <li><a href="#">Legal & Privacy</a></li>
                            <li><a asp-controller="Setting" asp-action="Index" asp-route-id="1">My Account</a></li>
                            @if (user!=null)
                            {
                                <li><a asp-controller="Setting" asp-action="Index" asp-route-id="2">Orders and Returns</a></li>
                            }
                            else
                            {
                                <li><a href="#"  >Orders and Returns</a></li>
                            }
                        </ul>
                </div> 
      
                <div class="info-list">
                    <h3>
                        Shop</h1>

                        <ul>
                            <li><a asp-controller="Shop" asp-action="Index">Shop</a></li>
                            <li><a asp-controller="Blog" asp-action="Index">Blog</a></li>
                            <li><a asp-controller="Blog" asp-action="Index">Gift Card</a></li>
                        </ul>
                </div>


            </div>

            <div class="subscribe">

                <h3>Subscribe</h3>

                <form class="subscribe-form">
                    <p>Be the first to get the latest news about trends, promotions, and much more!</p>
                    <input type="email" placeholder="Enter your email">
                    <div>
                        <button type="submit" href="#">JOIN</button>
                    </div>
                </form>
            </div>

        </div>

        <div class="footer-bottom">

            <p>© 2024 Clothing. Made with by<a href="#">: Tamerlan Aliyev</a></p>

            <div class="payments">
                <img src="~/cilent/assets/icons/visa.svg" alt="visa">
                <img src="~/cilent/assets/icons/master.svg" alt="master">
            </div>
        </div>

    </footer>
    <!-- ================================
            FOOTER    -    END
    ===================================== -->
    <!-- Link Swiper's CSS -->
    <script src="~/cilent/assets/js/swiper-bundle.min.js"></script>
    <script src="~/cilent/assets/js/index.js"></script>
    @await RenderSectionAsync("script", false)
    <script>
        function addListenersToViewComponent() {
            const productItems = document.querySelectorAll('.basket-product-list .product-item');
            let BasketHeaderCount = document.querySelector('.basket-header span');
            let bskCount = document.querySelector('.i-basket sup')
            productItems.forEach(productItem => {

                let id = productItem.getAttribute('data-id')
                console.log(id)
                let quantity = productItem.querySelector('.basket-quantity-box');
                let removeItem = productItem.querySelector('.basket-price-close a');
                let input = quantity.querySelector('.quantity-input');
                let minus = quantity.querySelector('.minus');
                let plus = quantity.querySelector('.plus');
                let totalItem = parseInt(quantity.getAttribute('data-total'));

                let subSellPrice = document.querySelector('.basket-total-prices #sell-price');
                let subDisPrice = document.querySelector('.basket-total-prices #dis-price');

                let hasDisPrice = productItem.querySelector('#dis-price') !== null;

                function updatePrices(sell, dis, multiplier) {
                    let SellPrice = parseFloat(sell.innerText.replace('$', '').trim());
                    subSellPrice.innerText = '$' + (parseFloat(subSellPrice.innerText.replace('$', '').trim()) + SellPrice * multiplier).toFixed(2);
                    subDisPrice.innerText = '$' + (parseFloat(subDisPrice.innerText.replace('$', '').trim()) + (dis ? parseFloat(dis.innerText.replace('$', '').trim()) : SellPrice) * multiplier).toFixed(2);
                }


                //Increase
                plus.addEventListener('click', () => {
                    if (totalItem > parseInt(input.value)) {
                        input.value = parseInt(input.value) + 1;
                        BasketHeaderCount.innerText = parseInt(BasketHeaderCount.innerText) + 1;

                        let sell = productItem.querySelector('#sell-price');
                        let dis = hasDisPrice ? productItem.querySelector('#dis-price') : null;
                        updatePrices(sell, dis, 1);


                        bskCount.innerText = parseInt(bskCount.innerText) + 1


                        fetch(`/Basket/IncreaseBasket/${id}`)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log(data);
                            })
                            .catch(error => {
                                console.error('There has been a problem with your fetch operation:', error);
                            });
                    }
                });

                //Decrease
                minus.addEventListener('click', () => {
                    if (parseInt(input.value) > 1) {
                        input.value = parseInt(input.value) - 1;
                        BasketHeaderCount.innerText = parseInt(BasketHeaderCount.innerText) - 1;

                        bskCount.innerText = parseInt(bskCount.innerText) - 1;


                        let sell = productItem.querySelector('#sell-price');
                        let dis = hasDisPrice ? productItem.querySelector('#dis-price') : null;
                        updatePrices(sell, dis, -1);

                        fetch(`/Basket/DecreaseBasket/${id}`)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                console.log(data);
                            })
                            .catch(error => {
                                console.error('There has been a problem with your fetch operation:', error);
                            });
                    }
                });

                function updateTotalCount() {
                    let totalCount = 0;
                    document.querySelectorAll('.quantity-input').forEach(input => {
                        totalCount += parseInt(input.value) || 0;
                    });
                    BasketHeaderCount.innerText = totalCount;
                }


                //INPUT
                input.addEventListener('input', () => {
                    let newValue = parseInt(input.value);
                    if (isNaN(newValue) || newValue < 1) {
                        input.value = 1;
                        newValue = 1;
                    }
                    const maxQuantity = parseInt(quantity.dataset.total);
                    const currentCount = parseInt(BasketHeaderCount.innerText);
                    const oldValue = parseInt(input.getAttribute('data-old-value')) || 1;

                    if (newValue > maxQuantity) {
                        input.value = maxQuantity;
                    }

                    const actualNewValue = parseInt(input.value);
                    const difference = actualNewValue - oldValue;
                    BasketHeaderCount.innerText = currentCount + difference;
                    bskCount.innerText = currentCount + difference


                    let sell = productItem.querySelector('#sell-price');
                    let dis = hasDisPrice ? productItem.querySelector('#dis-price') : null;
                    updatePrices(sell, dis, difference);

                    fetch(`/Basket/ChangeBasket?id=${id}&count=${newValue}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log(data);
                        })
                        .catch(error => {
                            console.error('There has been a problem with your fetch operation:', error);
                        });

                    input.setAttribute('data-old-value', actualNewValue);
                });

                input.setAttribute('data-old-value', input.value);


                //REMOVE
                removeItem.addEventListener('click', (e) => {
                    e.preventDefault();
                    productItem.style.display = "none";

                    BasketHeaderCount.innerText = parseInt(BasketHeaderCount.innerText) - parseInt(input.value);

                    let sell = productItem.querySelector('#sell-price');
                    let dis = productItem.querySelector('#dis-price');
                    updatePrices(sell, dis, -parseInt(input.value));

                    fetch(`/Basket/DeleteBasket/${id}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log(data);
                        })
                        .catch(error => {
                            console.error('There has been a problem with your fetch operation:', error);
                        });
                });
                const basketClose = document.querySelector('.basket-close');

                basketClose.addEventListener('click', () => {
                    basketList.classList.remove('show');
                    console.log(basketClose)

                });

                document.addEventListener('click', (event) => {
                    const clickedElement = event.target;
                    if (!basketList.contains(clickedElement) && !basaketIcon.contains(clickedElement)) {
                        basketList.classList.remove('show');
                    }
                });

                updateTotalCount();
            });
        }

        var basaketIcon = document.querySelector('.i-basket');
        var basketList = document.querySelector('.basket-list');

        basaketIcon.addEventListener('click', (event) => {
            event.stopPropagation();
            basketList.classList.add('show');

            fetch('/Basket/Getbasket')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    basketList.innerHTML = html;
                    addListenersToViewComponent();
                    CloseMenu();

                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        });


        const CloseMenu = () => {
            var basketClose = document.querySelector('.basket-close');

            basketClose.addEventListener('click', () => {
                basketList.classList.remove('show');
                console.log(basketClose)

            });

            document.addEventListener('click', (event) => {
                const clickedElement = event.target;
                if (!basketList.contains(clickedElement) && !basaketIcon.contains(clickedElement)) {
                    basketList.classList.remove('show');
                }
            });
        }
        CloseMenu();
        console.log(document.getElementById("searchProduct"))

        document.getElementById("searchProduct").addEventListener("input", function () {
            const text = this.value.trim();
            fetch(`/Home/Search?text=${text}`)
                .then(res => res.text())
                .then(res => {
                    document.getElementById('SearchedProd').innerHTML = res;
                })
                .catch(e => console.error(e));
        });
    </script>


</body>

</html>









